- hosts: localhost
  gather_facts: no
  vars_files:
    - keys.yml
  tasks:
    - name: Attach Volume
      ec2_vol:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        instance: i-008f8449573953a32
        id: vol-01b459967a217a27b
        device_name: /dev/xvdf
        delete_on_termination: yes

    - name: Change instances state by tag
      ec2:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        state: running
        wait: yes
        instance_tags:
          Name: Demo
      register: ec2

    - name: add host to inventory
      add_host:
        hostname: '{{ item.public_ip }}'
        groupname: demogroup
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_ssh_private_key_file: /home/ansible/keypair.pem
      loop: '{{ ec2.instances }}'


- hosts: demogroup
  gather_facts: no
  remote_user: ec2-user
  tasks:
    - name: Wait for SSH to come up
      wait_for_connection:
        delay: 5
        timeout: 30

    - name: Collect instance facts
      ec2_metadata_facts:
      register: ec2_meta_facts

    - name: Create new partition
      become: yes
      parted:
        device: /dev/xvdf
        number: 1
        state: present
      register: parted_output
    - debug:
        var: parted_output

    - name: Format new partition
      become: yes
      filesystem:
        fstype: ext4
        dev: /dev/xvdf1

    - name: Mount web content volume
      become: yes
      mount:
        path: /var/www
        src: /dev/xvdf1
        fstype: ext4
        state: mounted 

    - name: Show mounts
      debug: 
        var: ansible_mounts
      
- hosts: localhost
  gather_facts: yes
  vars_files:
    - keys.yml
  tasks:
    - name: Check out volumes
      debug:
        var: hostvars[groups['demogroup'][0]]['ansible_ec2_instance_id'] 

    - name: Change instances state by tag
      ec2:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        state: stopped
        instance_tags:
          Name: Demo
      register: ec2
